{"version":3,"sources":["components/@vuexy/checkbox/CheckboxesVuexy.js","views/data-list/ProductDropFile.js","views/data-list/DataListSidebar.js","views/data-list/DataListConfig.js","views/pages/ProductsView.js"],"names":["CheckBoxesVuexy","React","Component","render","createElement","className","concat","this","props","color","type","defaultChecked","checked","value","disabled","onClick","onChange","size","icon","label","BasicDropzone","files","setFiles","useState","getRootProps","getInputProps","useDropzone","accept","dropFileType","onDrop","acceptedFiles","updateStateFile","map","file","Object","assign","preview","URL","createObjectURL","thumbs","key","name","src","alt","useEffect","resetFiles","forEach","revokeObjectURL","ProductDropFile","Card","CardBody","DataListSidebar","_ref","show","handleSidebar","data","api","useApi","formData","queryClient","useQueryClient","showMessage","useSnackbarStatus","setFormData","url","usdzFile","glbFile","poster","model_placement","addNew","setAddNew","setresetFiles","updateFile","newValue","mutate","mutateCreate","isLoading","isLoadingCreate","useMutation","body","createProduct","onSuccess","message","invalidateQueries","cacheKeys","products","dashboard","onError","error","console","log","mutateUpdate","isLoadingUpdate","updateProduct","_data$product","_data$product2","_data$product3","product","classnames","X","PerfectScrollbar","options","wheelPropagation","FormGroup","Label","for","style","fontSize","Input","required","placeholder","e","target","id","Spinner","Button","handleSubmit","product_id","outline","chipColors","1","0","selectedStyle","rows","selectedHighlighStyle","backgroundColor","boxShadow","transform","ActionsComponent","Edit","currentData","row","Trash","deleteRow","CustomHeader","debouncedHandleFilter","AwesomeDebouncePromise","handleFilter","Plus","StatusDropdown","updateStatus","status","setStatus","newStatus","cursor","fontWeight","textAlign","marginTop","width","padding","ImageWithLoading","_ref2","loading","setLoading","position","height","onLoad","handleImageLoaded","display","DataListConfig","_memoizedData$data","location","useLocation","totalPages","setTotalPages","currentPage","setCurrentPage","sidebar","setSidebar","setCurrentData","copyDetails","setcopyDetails","copied","rowId","filters","setFilters","queryParams","URLSearchParams","search","initialFilters","refetch","isFetching","useQuery","queryKey","queryFn","getProducts","totalProducts","total","calculatedPages","Math","ceil","handlePages","Number","setQueryData","prevData","updatedData","_prevData$data","_prevData$data2","filter","item","_data$product4","_data$product5","memoizedData","useMemo","columns","selector","minWidth","cell","_JSON$parse","_row$name","JSON","parse","posterFileLink","sortable","title","_JSON$parse2","_JSON$parse2$0$usdzFi","models","usdzFileLink","_JSON$parse3","_JSON$parse3$0$glbFil","glbFileLink","_row$product_log_deta","_row$product_log_deta2","product_log_details","product_views","genaratedLink","user_id","CopyToClipboard","text","onCopy","borderRadius","handleCurrentData","handleDelete","boolean","obj","async","updatedFilters","trim","page","queryString","toString","history","push","filterValues","DataTable","pagination","paginationServer","paginationComponent","ReactPaginate","previousLabel","ChevronLeft","nextLabel","ChevronRight","breakLabel","breakClassName","pageCount","containerClassName","activeClassName","forcePage","onPageChange","_ref3","selected","updatedFilterWithPage","handlePagination","noHeader","responsive","pointerOnHover","selectableRowsHighlight","customStyles","sortIcon","ChevronDown","selectableRowsComponent","Checkbox","selectableRowsComponentProps","Check","Sidebar","ProductsView","Fragment","Row","Col","sm","ThumbViewConfig"],"mappings":"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","file":"static/js/7.27d4d20b.chunk.js","sourcesContent":["import React from \"react\"\nclass CheckBoxesVuexy extends React.Component {\n  render() {\n    return (\n      <div\n        className={`vx-checkbox-con ${\n          this.props.className ? this.props.className : \"\"\n        } vx-checkbox-${this.props.color}`}\n      >\n        <input\n          type=\"checkbox\"\n          defaultChecked={this.props.defaultChecked}\n          checked={this.props.checked}\n          value={this.props.value}\n          disabled={this.props.disabled}\n          onClick={this.props.onClick ? this.props.onClick : null}\n          onChange={this.props.onChange ? this.props.onChange : null}\n        />\n        <span\n          className={`vx-checkbox vx-checkbox-${\n            this.props.size ? this.props.size : \"md\"\n          }`}\n        >\n          <span className=\"vx-checkbox--check\">{this.props.icon}</span>\n        </span>\n        <span>{this.props.label}</span>\n      </div>\n    )\n  }\n}\n\nexport default CheckBoxesVuexy\n","import React, { useState, useEffect } from \"react\";\nimport { Card, CardBody } from \"reactstrap\";\nimport { useDropzone } from \"react-dropzone\";\nimport \"../../assets/scss/plugins/extensions/dropzone.scss\";\n\nfunction BasicDropzone(props) {\n  const [files, setFiles] = useState([]);\n  function dynamicFileType() {\n    if (props.dropFileType === \"glbFile\") return \".glb\";\n    if (props.dropFileType === \"poster\") return \"image/*\";\n    if (props.dropFileType === \"usdzFile\") return \".usdz\";\n  }\n  const { getRootProps, getInputProps } = useDropzone({\n    accept: dynamicFileType(),\n    onDrop: (acceptedFiles) => {\n      props.updateStateFile(props.dropFileType, acceptedFiles[0]);\n      setFiles(\n        acceptedFiles.map((file) =>\n          Object.assign(file, {\n            preview: URL.createObjectURL(file),\n          })\n        )\n      );\n    },\n  });\n\n  const thumbs = files.map((file) => (\n    <div className=\"dz-thumb\" key={file.name}>\n      {props.dropFileType === \"poster\" ? (\n        <div className=\"dz-thumb\" key={file.name}>\n          <div className=\"dz-thumb-inner\">\n            <img src={file.preview} className=\"dz-img\" alt={file.name} />\n          </div>\n        </div>\n      ) : (\n        <div className=\"dz-thumb-inner\">\n          <p>{file.name}</p>\n          <p>{file.size} bytes</p>\n        </div>\n      )}\n    </div>\n  ));\n\n  useEffect(() => {\n    if (props.resetFiles) {\n      setFiles([]);\n    }\n  }, [props.resetFiles]);\n\n  useEffect(\n    () => () => {\n      // Make sure to revoke the data uris to avoid memory leaks\n      files.forEach((file) => URL.revokeObjectURL(file.preview));\n    },\n    [files]\n  );\n\n  return (\n    <section>\n      <div {...getRootProps({ className: \"dropzone\" })}>\n        <input {...getInputProps()} />\n        <p className=\"mx-1\">\n          Drag 'n' drop some files here, or click to select files\n        </p>\n      </div>\n      <aside className=\"thumb-container\">{thumbs}</aside>\n    </section>\n  );\n}\n\nclass ProductDropFile extends React.Component {\n  render() {\n    return (\n      <Card>\n        <CardBody>\n          <BasicDropzone\n            updateStateFile={this.props.updateStateFile}\n            dropFileType={this.props.dropFileType}\n            resetFiles={this.props.resetFiles}\n          />\n        </CardBody>\n      </Card>\n    );\n  }\n}\n\nexport default ProductDropFile;\n","import React, { useState, useEffect } from \"react\";\nimport { Label, Input, FormGroup, Button, Spinner } from \"reactstrap\";\nimport { X } from \"react-feather\";\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\nimport classnames from \"classnames\";\nimport ProductDropFile from \"./ProductDropFile\";\nimport { useMutation, useQueryClient } from \"react-query\";\nimport useApi from \"../../hooks/useApi\";\nimport useSnackbarStatus from \"../../hooks/useSnackbarStatus\";\nimport { cacheKeys } from \"../../api/CacheKeys\";\n\nconst DataListSidebar = ({ show, handleSidebar, data }) => {\n  const api = useApi({ formData: true });\n  const queryClient = useQueryClient();\n  const showMessage = useSnackbarStatus();\n  const [formData, setFormData] = useState({\n    url: \"\",\n    name: \"\",\n    usdzFile: \"\",\n    glbFile: \"\",\n    poster: \"\",\n    model_placement: \"\",\n  });\n  const [addNew, setAddNew] = useState(false);\n  const [resetFiles, setresetFiles] = useState(false);\n  useEffect(() => {\n    if (data !== null) {\n      setFormData({\n        url: data?.url,\n        name: data?.name,\n        usdzFile: \"\",\n        glbFile: \"\",\n        poster: \"\",\n        model_placement: data?.model_placement,\n      });\n    } else {\n      setFormData({\n        url: \"\",\n        name: \"\",\n        usdzFile: \"\",\n        glbFile: \"\",\n        poster: \"\",\n        model_placement: \"floor\",\n      });\n    }\n    setAddNew(false);\n  }, [data]);\n\n  const updateFile = (type, newValue) => {\n    setFormData({ ...formData, [type]: newValue });\n  };\n\n  const { mutate: mutateCreate, isLoading: isLoadingCreate } = useMutation(\n    (body) => api.createProduct(body),\n    {\n      onSuccess: (data) => {\n        setresetFiles(false);\n        showMessage(data?.message, \"success\");\n        queryClient.invalidateQueries(cacheKeys.products);\n        queryClient.invalidateQueries(cacheKeys.dashboard);\n\n        // clear state\n        setFormData({\n          url: \"\",\n          name: \"\",\n          usdzFile: \"\",\n          glbFile: \"\",\n          poster: \"\",\n          model_placement: \"floor\",\n        });\n        setresetFiles(true);\n      },\n      onError: (error) => {\n        console.log(error);\n        showMessage(error.message);\n      },\n    }\n  );\n\n  const { mutate: mutateUpdate, isLoading: isLoadingUpdate } = useMutation(\n    (body) => api.updateProduct(body),\n    {\n      onSuccess: (data) => {\n        setresetFiles(false);\n        showMessage(data?.message, \"success\");\n        queryClient.invalidateQueries(cacheKeys.products);\n\n        // clear State\n        setFormData({\n          url: data?.product?.url,\n          name: data?.product?.name,\n          usdzFile: \"\",\n          glbFile: \"\",\n          poster: \"\",\n          model_placement: data?.product?.model_placement,\n        });\n        setresetFiles(true);\n      },\n      onError: (error) => {\n        console.log(error);\n        showMessage(error.message);\n      },\n    }\n  );\n\n  const handleSubmit = () => {\n    if (data !== null) {\n      const body = {\n        ...formData,\n        product_id: data?.id,\n        url: formData?.url === data?.url ? \"\" : formData?.url,\n      };\n      mutateUpdate(body);\n    } else {\n      setAddNew(true);\n      mutateCreate(formData);\n    }\n  };\n\n  const { url, name, model_placement } = formData;\n\n  return (\n    <div className={classnames(\"data-list-sidebar\", { show: show })}>\n      <div className=\"data-list-sidebar-header mt-2 px-2 d-flex justify-content-between\">\n        <h4>{data !== null ? \"UPDATE PRODUCT\" : \"ADD NEW PRODUCT\"}</h4>\n        <X size={20} onClick={() => handleSidebar(false, true)} />\n      </div>\n      <PerfectScrollbar\n        className=\"data-list-fields px-2 mt-3\"\n        options={{ wheelPropagation: false }}\n      >\n        <FormGroup>\n          <Label\n            for=\"data-name\"\n            style={{ fontSize: \"1rem\" }}\n            className=\"text-bold-500\"\n          >\n            Name\n          </Label>\n          <Input\n            type=\"text\"\n            value={name}\n            required\n            placeholder=\"Product Name\"\n            onChange={(e) => setFormData({ ...formData, name: e.target.value })}\n            id=\"data-name\"\n          />\n          <Label\n            for=\"data-name\"\n            style={{ fontSize: \"1rem\" }}\n            className=\"text-bold-500\"\n          >\n            URL\n          </Label>\n          <Input\n            type=\"text\"\n            value={url}\n            required\n            placeholder=\"Product Url\"\n            onChange={(e) => setFormData({ ...formData, url: e.target.value })}\n            id=\"data-name\"\n          />\n        </FormGroup>\n        <FormGroup>\n          <Label\n            for=\"Poster\"\n            style={{ fontSize: \"1rem\" }}\n            className=\"text-bold-500\"\n          >\n            Poster\n          </Label>\n          <ProductDropFile\n            updateStateFile={updateFile}\n            dropFileType={\"poster\"}\n            resetFiles={resetFiles}\n          />\n        </FormGroup>\n        <FormGroup>\n          <Label\n            for=\"glb-model\"\n            style={{ fontSize: \"1rem\" }}\n            className=\"text-bold-500\"\n          >\n            GLB Model\n          </Label>\n          <ProductDropFile\n            updateStateFile={updateFile}\n            dropFileType={\"glbFile\"}\n            resetFiles={resetFiles}\n          />\n        </FormGroup>\n        <FormGroup>\n          <Label\n            for=\"usdz-model\"\n            style={{ fontSize: \"1rem\" }}\n            className=\"text-bold-500\"\n          >\n            USDZ Model\n          </Label>\n          <ProductDropFile\n            updateStateFile={updateFile}\n            dropFileType={\"usdzFile\"}\n            resetFiles={resetFiles}\n          />\n        </FormGroup>\n        <FormGroup>\n          <Label\n            for=\"model-placement\"\n            style={{ fontSize: \"1rem\" }}\n            className=\"text-bold-500\"\n          >\n            Model Placement\n          </Label>\n          <Input\n            type=\"select\"\n            id=\"model-placement\"\n            value={model_placement}\n            onChange={(e) =>\n              setFormData({ ...formData, model_placement: e.target.value })\n            }\n          >\n            <option value=\"floor\">Floor</option>\n            <option value=\"wall\">Wall</option>\n          </Input>\n        </FormGroup>\n      </PerfectScrollbar>\n      <div className=\"data-list-sidebar-footer px-2 d-flex justify-content-start align-items-center mt-1\">\n        {isLoadingCreate || isLoadingUpdate ? (\n          <Spinner color=\"primary\" />\n        ) : (\n          <Button color=\"primary\" onClick={handleSubmit}>\n            {data !== null ? \"Update\" : \"Submit\"}\n          </Button>\n        )}\n\n        <Button\n          className=\"ml-1\"\n          color=\"danger\"\n          outline\n          onClick={() => handleSidebar(false, true)}\n        >\n          Cancel\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default DataListSidebar;\n","import React, { useState, useMemo, useEffect } from \"react\";\nimport { Button, Input } from \"reactstrap\";\nimport DataTable from \"react-data-table-component\";\nimport classnames from \"classnames\";\nimport ReactPaginate from \"react-paginate\";\nimport { history } from \"../../history\";\nimport { useLocation } from \"react-router-dom\";\nimport {\n  Edit,\n  Trash,\n  ChevronDown,\n  Plus,\n  Check,\n  ChevronLeft,\n  ChevronRight,\n} from \"react-feather\";\nimport Sidebar from \"./DataListSidebar\";\nimport Checkbox from \"../../components/@vuexy/checkbox/CheckboxesVuexy\";\nimport { useQuery, useMutation, useQueryClient } from \"react-query\";\nimport { cacheKeys } from \"../../api/CacheKeys\";\nimport useApi from \"../../hooks/useApi\";\nimport useSnackbarStatus from \"../../hooks/useSnackbarStatus\";\nimport { FormGroup } from \"reactstrap\";\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\nimport Spinner from \"../../components/@vuexy/spinner/Loading-spinner\";\nimport AwesomeDebouncePromise from \"awesome-debounce-promise\";\n\nimport \"../../assets/scss/plugins/extensions/react-paginate.scss\";\nimport \"../../assets/scss/pages/data-list.scss\";\n\nconst chipColors = {\n  1: \"success\",\n  0: \"danger\",\n};\n\nconst selectedStyle = {\n  rows: {\n    selectedHighlighStyle: {\n      backgroundColor: \"rgba(115,103,240,.05)\",\n      color: \"#7367F0 !important\",\n      boxShadow: \"0 0 1px 0 #7367F0 !important\",\n      \"&:hover\": {\n        transform: \"translateY(0px) !important\",\n      },\n    },\n  },\n};\n\nconst ActionsComponent = (props) => {\n  return (\n    <div className=\"data-list-action\">\n      <Edit\n        className=\"cursor-pointer mr-1\"\n        size={20}\n        onClick={() => {\n          return props.currentData(props.row);\n        }}\n      />\n      <Trash\n        className=\"cursor-pointer\"\n        size={20}\n        onClick={() => {\n          props.deleteRow(props.row);\n        }}\n      />\n    </div>\n  );\n};\n\nconst CustomHeader = (props) => {\n  // const { name } = props.filterValues;\n  const debouncedHandleFilter = AwesomeDebouncePromise(props.handleFilter, 500);\n  const handleInputChange = (e) => {\n    const value = e.target.value;\n    const name = e.target.name;\n    debouncedHandleFilter(name, value);\n  };\n\n  return (\n    <div className=\"data-list-header d-flex justify-content-between flex-wrap\">\n      <div className=\"actions-left d-flex flex-wrap\">\n        <Button\n          className=\"add-new-btn\"\n          color=\"primary\"\n          onClick={() => props.handleSidebar(true, true)}\n          outline\n        >\n          <Plus size={15} />\n          <span className=\"align-middle\">Add New</span>\n        </Button>\n      </div>\n      <div className=\"actions-right d-flex flex-wrap mt-sm-0 mt-2\">\n        <div className=\"filter-section\">\n          <Input\n            type=\"text\"\n            name=\"name\"\n            className=\"border-black\"\n            // value={name}\n            placeholder=\"Search By Product Name\"\n            onChange={handleInputChange}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst StatusDropdown = ({ row, updateStatus }) => {\n  const [status, setStatus] = useState(row.status);\n\n  const handleChange = (e) => {\n    const newStatus = e.target.value;\n    setStatus(newStatus);\n    updateStatus(row.id, newStatus);\n  };\n\n  return (\n    <FormGroup>\n      <Input\n        type=\"select\"\n        value={status}\n        onChange={handleChange}\n        style={{\n          backgroundColor:\n            chipColors[status] === \"success\" ? \"rgb(143 217 112)\" : \"#F8D7DA\",\n          cursor: \"pointer\",\n          fontWeight: \"500\",\n          textAlign: \"center\",\n          marginTop: \"1.5rem\",\n          width: \"100\",\n          padding: \"6px\",\n        }}\n      >\n        <option value=\"1\">Active</option>\n        <option value=\"0\">Inactive</option>\n      </Input>\n    </FormGroup>\n  );\n};\n\nconst ImageWithLoading = ({ src, alt }) => {\n  const [loading, setLoading] = useState(true);\n\n  const handleImageLoaded = () => {\n    setLoading(false); // Set loading to false when the image is loaded\n  };\n\n  return (\n    <div style={{ position: \"relative\" }}>\n      {loading && src && <div>Loading...</div>}\n      <img\n        src={src}\n        alt={alt}\n        height=\"100\"\n        onLoad={handleImageLoaded} // Call handleImageLoaded when the image is loaded\n        style={{ display: loading ? \"none\" : \"block\" }} // Hide the image while loading\n      />\n    </div>\n  );\n};\n\nconst DataListConfig = () => {\n  const api = useApi({ formData: false });\n  const location = useLocation();\n\n  const queryClient = useQueryClient();\n  const showMessage = useSnackbarStatus();\n  const [totalPages, setTotalPages] = useState(0);\n  const [currentPage, setCurrentPage] = useState(0);\n  const [sidebar, setSidebar] = useState(false);\n  const [currentData, setCurrentData] = useState(null);\n  const [copyDetails, setcopyDetails] = useState({\n    copied: false,\n    rowId: \"\",\n  });\n  const [filters, setFilters] = useState({});\n\n  useEffect(() => {\n    const queryParams = new URLSearchParams(location.search);\n    const initialFilters = {};\n    queryParams.forEach((value, key) => {\n      initialFilters[key] = value;\n    });\n    console.log(\"iam callijng\", initialFilters);\n    setFilters(initialFilters);\n  }, [location.search]);\n\n  const handlePages = (data) => {\n    const totalProducts = data?.total;\n    const perPage = 10;\n    const calculatedPages = Math.ceil(totalProducts / perPage);\n    setTotalPages(calculatedPages);\n  };\n\n  const { data, isLoading, refetch, isFetching } = useQuery({\n    queryKey: [cacheKeys.products],\n    queryFn: () => api.getProducts(filters),\n    onSuccess: (data) => {\n      console.log(\"pdata\", data);\n      handlePages(data);\n    },\n    onError: (error) => {\n      showMessage(error?.message);\n    },\n  });\n\n  useEffect(() => {\n    refetch();\n  }, [filters, refetch]);\n  \n  const { mutate: mutateUpdate } = useMutation(\n    (body) => api.updateProduct(body),\n    {\n      onSuccess: (data) => {\n        if (Number(data?.product?.status) === 4) {\n          showMessage(\"Product has beed deleted\", \"error\");\n        } else {\n          showMessage(data?.message, \"success\");\n        }\n        queryClient.setQueryData([cacheKeys.products], (prevData) => {\n          let updatedData;\n          // For removing deleted product depends on status\n          if (Number(data?.product?.status) === 4) {\n            updatedData = prevData?.data?.filter(\n              (item) => item?.id !== data?.product?.id\n            );\n          } else {\n            // For updating status on product.\n            updatedData = prevData?.data?.map((item) => {\n              if (item?.id === data?.product?.id) {\n                return { ...item, status: Number(data?.product?.status) };\n              }\n              return item;\n            });\n          }\n          return {\n            ...prevData,\n            data: updatedData,\n          };\n        });\n        queryClient.invalidateQueries(cacheKeys.dashboard);\n      },\n      onError: (error) => {\n        console.log(error);\n        showMessage(error.message);\n      },\n    }\n  );\n\n  const memoizedData = useMemo(() => {\n    // Expensive computation here\n    return data;\n  }, [data]);\n\n  let columns = [\n    {\n      name: \"Image\",\n      selector: \"img\",\n      minWidth: \"220px\",\n      cell: (row) => (\n        <ImageWithLoading\n          src={JSON.parse(row?.poster)?.posterFileLink}\n          alt={row?.name ?? \"\"}\n        />\n      ),\n    },\n    {\n      name: \"Name\",\n      selector: \"name\",\n      sortable: true,\n      minWidth: \"250px\",\n      cell: (row) => (\n        <p title={row?.name} className=\"text-truncate text-bold-500 mb-0\">\n          {row?.name}\n        </p>\n      ),\n    },\n    {\n      name: \"Url\",\n      selector: \"url\",\n      sortable: true,\n      cell: (row) => `${row?.url}`,\n    },\n    {\n      name: \"Usdz\",\n      selector: \"usdz\",\n      sortable: true,\n      cell: (row) => {\n        if (JSON.parse(row?.models)?.[0].usdzFile?.usdzFileLink) {\n          return \"Available\";\n        } else {\n          return \"Null\";\n        }\n      },\n    },\n    {\n      name: \"Glb\",\n      selector: \"glb\",\n      sortable: true,\n      cell: (row) => {\n        if (JSON.parse(row?.models)?.[0].glbFile?.glbFileLink) {\n          return \"Available\";\n        } else {\n          return \"Null\";\n        }\n      },\n    },\n    // {\n    //   name: \"Popularity\",\n    //   selector: \"popularity\",\n    //   sortable: true,\n    //   cell: (row) => (\n    //     <Progress\n    //       className=\"w-100 mb-0\"\n    //       color={row.popularity.color}\n    //       value={row.popularity.popValue}\n    //     />\n    //   ),\n    // },\n    {\n      name: \"Status\",\n      selector: \"status\",\n      sortable: true,\n      cell: (row) => <StatusDropdown row={row} updateStatus={updateStatus} />,\n    },\n    {\n      name: \"Views\",\n      selector: \"product_views\",\n      sortable: true,\n      cell: (row) => `${row?.product_log_details?.product_views ?? 0}`,\n    },\n    {\n      name: \"Links\",\n      selector: \"link\",\n      cell: (row) => {\n        const genaratedLink = `https://mysellbee.com/view/ar/user_id=${row?.user_id}/url=${row?.url}`;\n        return (\n          <div>\n            <CopyToClipboard\n              text={genaratedLink}\n              onCopy={() =>\n                setcopyDetails({\n                  ...copyDetails,\n                  copied: true,\n                  rowId: row?.id,\n                })\n              }\n            >\n              {copyDetails?.copied && copyDetails?.rowId === row?.id ? (\n                <button\n                  style={{\n                    backgroundColor: \"#000000d6\",\n                    color: \"white\",\n                    padding: \"5px\",\n                    borderRadius: \"5px\",\n                  }}\n                >\n                  Copied\n                </button>\n              ) : (\n                <button\n                  style={{\n                    backgroundColor: \"black\",\n                    color: \"white\",\n                    padding: \"9px\",\n                    borderRadius: \"5px\",\n                  }}\n                >\n                  Copy\n                </button>\n              )}\n            </CopyToClipboard>\n          </div>\n        );\n      },\n    },\n    {\n      name: \"Actions\",\n      sortable: true,\n      cell: (row) => (\n        <ActionsComponent\n          row={row}\n          // getData={this.props.getData}\n          // parsedFilter={this.props.parsedFilter}\n          currentData={handleCurrentData}\n          deleteRow={handleDelete}\n        />\n      ),\n    },\n  ];\n\n  const handleFilter = async (name, value) => {\n    let updatedFilters = {};\n    if (value.trim() !== \"\") {\n      updatedFilters = {\n        ...filters,\n        [name]: value,\n        page: 1,\n      };\n    }\n    const queryString = new URLSearchParams(updatedFilters).toString();\n    history.push({ search: queryString });\n\n    setCurrentPage(0);\n    setFilters(updatedFilters);\n  };\n\n  const handleSidebar = (boolean, addNew = false) => {\n    setSidebar(boolean);\n    // if (addNew === true) setCurrentData(null);\n  };\n\n  const handleDelete = (row) => {\n    const body = {\n      status: 4,\n      product_id: row?.id,\n      url: \"\",\n    };\n    mutateUpdate(body);\n  };\n\n  const handleCurrentData = (obj) => {\n    setCurrentData(obj);\n    handleSidebar(true);\n  };\n\n  const handlePagination = (page) => {\n    setCurrentPage(page.selected);\n    const updatedFilterWithPage = {\n      ...filters,\n      page: page?.selected + 1 ?? 1,\n    };\n\n    console.log(\"updated page filter\", updatedFilterWithPage);\n    const queryString = new URLSearchParams(updatedFilterWithPage).toString();\n    history.push({ search: queryString });\n\n    setFilters(updatedFilterWithPage);\n  };\n\n  const updateStatus = (id, status) => {\n    const body = {\n      status: Number(status),\n      product_id: id,\n      url: \"\",\n    };\n    mutateUpdate(body);\n  };\n\n  return (\n    <div className={`data-list list-view}`}>\n      <div className=\"mt-2\">\n        <CustomHeader\n                handleSidebar={handleSidebar}\n                handleFilter={handleFilter}\n                filterValues={filters}\n                // handleRowsPerPage={handleRowsPerPage}\n                // rowsPerPage={rowsPerPage}\n                // total={totalRecords}\n                // index={sortIndex}\n              />\n      </div>\n      {/* DataTable component with required props */}\n      {isLoading || isFetching ? (\n        <div className=\"mt-lg-5\">\n          <Spinner />\n        </div>\n      ) : (\n        <DataTable\n          columns={columns}\n          data={memoizedData?.data ?? []}\n          pagination\n          paginationServer\n          paginationComponent={() => (\n            <ReactPaginate\n              previousLabel={<ChevronLeft size={15} />}\n              nextLabel={<ChevronRight size={15} />}\n              breakLabel=\"...\"\n              breakClassName=\"break-me\"\n              pageCount={totalPages}\n              containerClassName=\"vx-pagination separated-pagination pagination-center pagination-sm mb-0 mt-2\"\n              activeClassName=\"active\"\n              forcePage={currentPage}\n              onPageChange={(page) => handlePagination(page)}\n            />\n          )}\n          noHeader\n          // subHeader\n          // selectableRows\n          responsive\n          pointerOnHover\n          selectableRowsHighlight\n          // onSelectedRowsChange={(data) =>\n          //   this.setState({ selected: data.selectedRows })\n          // }\n          customStyles={selectedStyle}\n          sortIcon={<ChevronDown />}\n          selectableRowsComponent={Checkbox}\n          selectableRowsComponentProps={{\n            color: \"primary\",\n            icon: <Check className=\"vx-icon\" size={12} />,\n            label: \"\",\n            size: \"sm\",\n          }}\n        />\n      )}\n\n      <Sidebar\n        show={sidebar}\n        data={currentData}\n        // updateData={this.props.updateData}\n        // addData={this.props.addData}\n        handleSidebar={handleSidebar}\n        // thumbView={thumbView}\n        // getData={this.props.getData}\n        // dataParams={this.props.parsedFilter}\n        // addNew={addNew}\n      />\n      <div\n        className={classnames(\"data-list-overlay\", {\n          show: sidebar,\n        })}\n        onClick={() => handleSidebar(false, true)}\n      />\n    </div>\n  );\n};\n\nexport default DataListConfig;\n","import React from \"react\"\nimport { Row, Col } from \"reactstrap\"\nimport ThumbViewConfig from \"../data-list/DataListConfig\"\nclass ProductsView extends React.Component {\n  render() {\n    return (\n      <React.Fragment>\n        <Row>\n          <Col sm=\"12\">\n            <ThumbViewConfig/>\n          </Col>\n        </Row>\n      </React.Fragment>\n    )\n  }\n}\n\nexport default ProductsView\n"],"sourceRoot":""}