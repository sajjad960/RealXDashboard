{"version":3,"sources":["components/@vuexy/statisticsCard/StatisticsCard.js","views/chart/BarChart.js","views/pages/Home.js"],"names":["StatisticsCards","React","Component","render","createElement","Card","CardBody","className","concat","this","props","iconRight","hideChart","iconBg","icon","stat","statTitle","Chart","options","series","type","height","elements","rectangle","borderWidth","borderSkipped","responsive","responsiveAnimationDuration","scales","xAxes","display","gridLines","color","scaleLabel","yAxes","ticks","stepSize","maintainAspectRatio","title","text","legend","BarCharts","_this$props","data","labels","datasets","label","backgroundColor","borderColor","propsDataProduct","topProducts","forEach","item","_item$product_log_det","push","product_log_details","name","product_views","CardHeader","CardTitle","Bar","Home","api","useApi","formData","showMessage","useSnackbarStatus","isLoading","refetch","isFetching","useQuery","queryKey","cacheKeys","dashboard","queryFn","getDashboardData","onError","error","message","useEffect","Row","Col","lg","sm","Spinner","StatisticsCard","ShoppingCart","size","totalProductsCount","Server","activeProductCount","BarChart"],"mappings":"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","file":"static/js/9.1254d771.chunk.js","sourcesContent":["import React from \"react\"\nimport { Card, CardBody } from \"reactstrap\"\nimport Chart from \"react-apexcharts\"\n\nclass StatisticsCards extends React.Component {\n  render() {\n    return (\n      <Card>\n        <CardBody\n          className={`${this.props.className ? this.props.className : \"stats-card-body\"} d-flex ${\n            !this.props.iconRight && !this.props.hideChart\n              ? \"flex-column align-items-start\"\n              : this.props.iconRight\n              ? \"justify-content-between flex-row-reverse align-items-center\"\n              : this.props.hideChart && !this.props.iconRight\n              ? \"justify-content-center flex-column text-center\"\n              : null\n          } ${!this.props.hideChart ? \"pb-0\" : \"pb-2\"} pt-2`}\n        >\n          <div className=\"icon-section\">\n            <div\n              className={`avatar avatar-stats p-50 m-0 ${\n                this.props.iconBg\n                  ? `bg-rgba-${this.props.iconBg}`\n                  : \"bg-rgba-primary\"\n              }`}\n            >\n              <div className=\"avatar-content\">{this.props.icon}</div>\n            </div>\n          </div>\n          <div className=\"title-section\">\n            <h2 className=\"text-bold-600 mt-1 mb-25\">{this.props.stat}</h2>\n            <p className=\"mb-0\">{this.props.statTitle}</p>\n          </div>\n        </CardBody>\n        {!this.props.hideChart && (\n          <Chart\n            options={this.props.options}\n            series={this.props.series}\n            type={this.props.type}\n            height={this.props.height ? this.props.height : 100}\n          />\n        )}\n      </Card>\n    )\n  }\n}\nexport default StatisticsCards\n","import React from \"react\";\nimport { Card, CardHeader, CardTitle, CardBody } from \"reactstrap\";\nimport { Bar } from \"react-chartjs-2\";\n\nconst $primary = \"#7367F0\",\n  $success = \"#28C76F\",\n  $danger = \"#EA5455\",\n  $warning = \"#FF9F43\",\n  $label_color = \"#1E1E1E\",\n  grid_line_color = \"#dae1e7\";\n\n// const data = {\n//   labels: [\"Africa\", \"Asia\", \"Europe\", \"Latin America\", \"North America\"],\n//   datasets: [\n//     {\n//       label: \"Population (millions)\",\n//       data: [50, 100, 40, 90, 30],\n//       backgroundColor: themeColors,\n//       borderColor: \"transparent\"\n//     }\n//   ]\n// }\n\nconst options = {\n  elements: {\n    rectangle: {\n      borderWidth: 2,\n      borderSkipped: \"left\",\n    },\n  },\n  responsive: true,\n  responsiveAnimationDuration: 500,\n\n  scales: {\n    xAxes: [\n      {\n        display: true,\n        gridLines: {\n          color: grid_line_color,\n        },\n        scaleLabel: {\n          display: true,\n        },\n      },\n    ],\n    yAxes: [\n      {\n        display: true,\n        gridLines: {\n          color: grid_line_color,\n        },\n        scaleLabel: {\n          display: true,\n        },\n        ticks: {\n          stepSize: 20,\n        },\n      },\n    ],\n  },\n  maintainAspectRatio: false,\n  title: {\n    display: true,\n    text: \"\",\n  },\n  legend: { display: false },\n};\n\nclass BarCharts extends React.Component {\n  render() {\n    const themeColors = [$primary, $success, $danger, $warning, $label_color];\n\n    const data = {\n      labels: [],\n      datasets: [\n        {\n          label: \"Views\",\n          data: [],\n          backgroundColor: themeColors, // Add your colors here\n          borderColor: \"transparent\",\n        },\n      ],\n    };\n    const propsDataProduct = this?.props?.topProducts\n    if(propsDataProduct) {\n      propsDataProduct.forEach(item => {\n        data.labels.push(item?.product_log_details?.name)\n        data.datasets[0].data.push(item?.product_views);\n      });\n    }\n    return (\n      <Card>\n        <CardHeader>\n          <CardTitle>Top 5 Products</CardTitle>\n        </CardHeader>\n        <CardBody>\n          <Bar data={data} options={options} height={400} />\n        </CardBody>\n      </Card>\n    );\n  }\n}\nexport default BarCharts;\n","import React, { useEffect } from \"react\";\nimport StatisticsCard from \"../../components/@vuexy/statisticsCard/StatisticsCard\";\nimport { Row, Col, Spinner } from \"reactstrap\";\nimport { ShoppingCart, Server, BarChart } from \"react-feather\";\nimport BarCharts from \"../chart/BarChart\";\nimport { cacheKeys } from \"../../api/CacheKeys\";\nimport { useQuery } from \"react-query\";\nimport useApi from \"../../hooks/useApi\";\nimport useSnackbarStatus from \"../../hooks/useSnackbarStatus\";\n\nconst Home = () => {\n  const api = useApi({ formData: false });\n  const showMessage = useSnackbarStatus();\n\n  const { data, isLoading, refetch, isFetching } = useQuery({\n    queryKey: [cacheKeys.dashboard],\n    queryFn: () => api.getDashboardData(),\n    onError: (error) => {\n      showMessage(error?.message);\n    },\n  });\n\n  useEffect(() => {\n    refetch();\n  }, [refetch]);\n\n  return (\n    <div>\n      <Row>\n        <Col lg=\"4\" sm=\"6\">\n          {isLoading || isFetching ? (\n            <Spinner color=\"primary\" />\n          ) : (\n            <StatisticsCard\n              hideChart\n              iconRight\n              iconBg=\"success\"\n              icon={<ShoppingCart className=\"success\" size={22} />}\n              stat={data?.totalProductsCount}\n              statTitle=\"Total Products\"\n            />\n          )}\n        </Col>\n        <Col lg=\"4\" sm=\"6\">\n          {isLoading || isFetching ? (\n            <Spinner color=\"primary\" />\n          ) : (\n            <StatisticsCard\n              hideChart\n              iconRight\n              iconBg=\"success\"\n              icon={<Server className=\"success\" size={22} />}\n              stat={data?.activeProductCount}\n              statTitle=\"Active Products\"\n            />\n          )}\n        </Col>\n        <Col lg=\"4\" sm=\"6\">\n          {isLoading || isFetching ? (\n            <Spinner color=\"primary\" />\n          ) : (\n            <StatisticsCard\n              hideChart\n              iconRight\n              iconBg=\"success\"\n              icon={<BarChart className=\"success\" size={22} />}\n              stat=\"+20%\"\n              statTitle=\"Performance\"\n            />\n          )}\n        </Col>\n      </Row>\n      <BarCharts topProducts={data?.topProducts} />\n    </div>\n  );\n};\n\nexport default Home;\n"],"sourceRoot":""}